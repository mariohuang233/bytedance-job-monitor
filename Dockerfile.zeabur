# Zeabur 专用 Dockerfile - 使用预装Playwright的镜像
# 避免构建过程中的Playwright安装问题

# 使用官方预装Playwright的镜像
FROM mcr.microsoft.com/playwright/python:v1.40.0-jammy

# 设置环境变量
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PLAYWRIGHT_BROWSERS_PATH=/ms-playwright
ENV DEBIAN_FRONTEND=noninteractive

# 设置工作目录
WORKDIR /app

# 更新系统包并安装必要依赖
RUN apt-get update && apt-get install -y \
    wget \
    curl \
    && rm -rf /var/lib/apt/lists/*

# 复制 requirements.txt 并安装 Python 依赖
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip
RUN pip install --no-cache-dir -r requirements.txt

# 验证 Playwright 安装并设置权限
RUN python -c "from playwright.sync_api import sync_playwright; print('Playwright ready!')" || \
    (echo 'Playwright verification failed, attempting reinstall...' && \
     python -m playwright install chromium && \
     python -c "from playwright.sync_api import sync_playwright; print('Playwright ready after reinstall!')")
RUN chmod -R 755 /ms-playwright || echo 'Warning: Could not set permissions on /ms-playwright'

# 复制应用代码
COPY . .

# 创建数据目录并设置权限
RUN mkdir -p /app/data && chmod 755 /app/data

# 暴露端口
EXPOSE 8080

# 设置环境变量
ENV FLASK_APP=app.py
ENV FLASK_ENV=production
ENV PYTHONPATH=/app
ENV DATA_DIR=/app/data
ENV DISPLAY=:99
ENV PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:8080/', timeout=5)" || exit 1

# 启动命令 - 使用gunicorn提供更好的生产环境支持
CMD ["python", "-m", "gunicorn", "--bind", "0.0.0.0:8080", "--workers", "1", "--timeout", "120", "--preload", "app:app"]